[{"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\index.js":"1","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\App.js":"2","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\reportWebVitals.js":"3","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\actions\\store.js":"4","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\components\\Customers.js":"5","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\reducers\\index.js":"6","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\reducers\\customer.js":"7","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\actions\\customer.js":"8","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\actions\\api.js":"9","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\components\\CustomerForm.js":"10","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\components\\useForm.js":"11","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\index.js":"12","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\App.js":"13","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\reportWebVitals.js":"14","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\components\\Customers.js":"15","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\actions\\store.js":"16","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\components\\CustomerForm.js":"17","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\actions\\customer.js":"18","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\reducers\\index.js":"19","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\components\\useForm.js":"20","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\actions\\api.js":"21","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\reducers\\customer.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":599,"mtime":1609165864325,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":335,"mtime":1609093270696,"results":"27","hashOfConfig":"24"},{"size":3853,"mtime":1609183121395,"results":"28","hashOfConfig":"24"},{"size":145,"mtime":1609086043952,"results":"29","hashOfConfig":"24"},{"size":907,"mtime":1609157084499,"results":"30","hashOfConfig":"24"},{"size":1601,"mtime":1609160013325,"results":"31","hashOfConfig":"24"},{"size":469,"mtime":1609182802183,"results":"32","hashOfConfig":"24"},{"size":5325,"mtime":1609242683317,"results":"33","hashOfConfig":"24"},{"size":829,"mtime":1609165064094,"results":"34","hashOfConfig":"24"},{"size":500,"mtime":499162500000,"results":"35","hashOfConfig":"36"},{"size":599,"mtime":1609165864325,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":3853,"mtime":1609183121395,"results":"39","hashOfConfig":"36"},{"size":335,"mtime":1609093270696,"results":"40","hashOfConfig":"36"},{"size":5325,"mtime":1609242683317,"results":"41","hashOfConfig":"36"},{"size":1601,"mtime":1609160013325,"results":"42","hashOfConfig":"36"},{"size":145,"mtime":1609086043952,"results":"43","hashOfConfig":"36"},{"size":829,"mtime":1609165064094,"results":"44","hashOfConfig":"36"},{"size":469,"mtime":1609182802183,"results":"45","hashOfConfig":"36"},{"size":907,"mtime":1609157084499,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"15xsopd",{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1r0kqoa",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\index.js",[],["101","102"],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\App.js",["103"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { store } from \"./actions/store\";\nimport { Provider } from \"react-redux\";\nimport Customers from './components/Customers';\nimport { Container } from \"@material-ui/core\";\nimport { ToastProvider } from \"react-toast-notifications\";\n\n\nfunction App() {\n    return (\n        <ToastProvider autoDismiss={true}>\n            <Provider store={store}>\n                <Container maxWidth=\"lg\">\n                    <Customers /></Container>\n            </Provider>\n        </ToastProvider>\n       \n    );\n}\n\nexport default App;","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\reportWebVitals.js",[],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\actions\\store.js",[],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\components\\Customers.js",["104"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/customer\";\r\nimport { Grid, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport CustomerForm from \"./CustomerForm\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        \"& .MuiTableCell-head\": {\r\n            fontSize: \"1.25rem\"\r\n        }\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(2),\r\n        padding: theme.spacing(2)\r\n    },\r\n    cellId: {        \r\n        verticalAlign: \"center\"\r\n    }\r\n})\r\n\r\nconst Customers = ({ classes, ...props }) => {\r\n    const [currentId, setCurrentId] = useState(0)\r\n\r\n    useEffect(() => {\r\n        props.fetchAllCustomers()\r\n    }, [])\r\n    //componentDidMount\r\n\r\n    //toast msg\r\n    const { addToast } = useToasts()\r\n\r\n    const onDelete = id => {\r\n        if (window.confirm('Are you sure to delete this record?'))\r\n            props.deleteCustomer(id, () => addToast(\"Deleted successfully\", { appearance: \"info\" }))\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={3}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <CustomerForm {...({ currentId, setCurrentId })} />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead className={classes.root}>\r\n                                <TableRow>\r\n                                    <TableCell>Id</TableCell>\r\n                                    <TableCell>Full Name</TableCell>\r\n                                    <TableCell>Address</TableCell>\r\n                                    <TableCell>Email</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    props.customerList.map((record, index) => {\r\n                                        return (<TableRow key={index} hover>\r\n                                            <TableCell className={classes.cellId}>{record.id}</TableCell>\r\n                                            <TableCell>{record.fullName}</TableCell>\r\n                                            <TableCell>{record.address}</TableCell>\r\n                                            <TableCell>{record.email}</TableCell>\r\n                                            <TableCell>\r\n                                                <ButtonGroup variant=\"text\">\r\n                                                    <Button><EditIcon color=\"primary\" onClick={() => { setCurrentId(record.id) }} /></Button>\r\n                                                    <Button><DeleteIcon color=\"secondary\" onClick={() => onDelete(record.id)} /></Button>\r\n                                                </ButtonGroup>\r\n                                            </TableCell>\r\n                                        </TableRow>)\r\n                                    })\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    customerList: state.customer.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllCustomers: actions.fetchAll,\r\n    deleteCustomer: actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Customers));","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\reducers\\index.js",[],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\reducers\\customer.js",[],["105","106"],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\actions\\customer.js",[],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\actions\\api.js",["107"],"import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:5000/api/\"\r\n\r\n\r\n\r\nexport default {\r\n\r\n    customer(url = baseUrl + 'api/') {\r\n        return {\r\n            fetchAll: () => axios.get(url),\r\n            fetchById: id => axios.get(url + id),\r\n            create: newRecord => axios.put(url, newRecord),\r\n            update: (id, updateRecord) => axios.post(url + id, updateRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n}","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\components\\CustomerForm.js",["108","109","110","111","112"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, TextField, withStyles, Button } from \"@material-ui/core\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/customer\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n\r\nconst styles = theme => ({\r\n        root: {\r\n                \"& .MuiTextField-root\": {\r\n                        margin: theme.spacing(1),\r\n                        minWidth: 230\r\n                }\r\n        },\r\n        smMargin: {\r\n                margin: theme.spacing(1),\r\n                minWidth: 80\r\n        }\r\n})\r\n\r\nconst initialFieldValues = {\r\n        id: '',\r\n        fullName: '',\r\n        address: '',\r\n        email: '',\r\n        age: '',\r\n        mobil: ''\r\n}\r\n\r\nconst CustomerForm = ({ classes, ...props }) => {\r\n\r\n        //toast msg\r\n        const { addToast } = useToasts()\r\n\r\n        const validate = (fieldValues = values) => {\r\n                let temp = { ...errors }\r\n                if ('id' in fieldValues)\r\n                        temp.id = fieldValues.id ? \"\" : \"This field is required.\"\r\n                if ('fullName' in fieldValues)\r\n                        temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n                if ('address' in fieldValues)\r\n                        temp.address = fieldValues.address ? \"\" : \"This field is required.\"\r\n                if ('email' in fieldValues)\r\n                        temp.email = (/^$|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n                setErrors({\r\n                        ...temp\r\n                })\r\n\r\n                if (fieldValues == values)\r\n                        return Object.values(temp).every(x => x == \"\")\r\n        }\r\n\r\n        const {\r\n                values,\r\n                setValues,\r\n                errors,\r\n                setErrors,\r\n                handleInputChange,\r\n                resetForm\r\n        } = useForm(initialFieldValues, validate, props.setCurrentId)\r\n\r\n        const handleSubmit = e => {\r\n                e.preventDefault()\r\n                if (validate()) {\r\n                        const onSuccess = () => {\r\n                                resetForm()\r\n                                addToast(\"Submitted successfully\", { appearance: \"success\" })\r\n                        }\r\n\r\n                        if (!props.customerList.find(x => x.id == props.currentId))\r\n                                props.createCustomer(values, onSuccess)\r\n\r\n                        else\r\n                                props.updateCustomer(props.currentId, values, onSuccess)\r\n                }\r\n        }\r\n\r\n        useEffect(() => {\r\n                if (props.currentId !== 0) {\r\n                        setValues({\r\n                                ...props.customerList.find(x => x.id === props.currentId)\r\n                        })\r\n                        setErrors({})\r\n                }\r\n        }, [props.currentId])\r\n\r\n        return (\r\n                <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n                        <Grid container>\r\n                                <Grid item xs={6}>\r\n                                        <TextField name=\"id\" variant=\"outlined\" label=\"Id\" value={values.id} onChange={handleInputChange} {...(errors.id && { error: true, helperText: errors.id })}></TextField>\r\n                                        <TextField name=\"fullName\" variant=\"outlined\" label=\"Full Name\" value={values.fullName} onChange={handleInputChange} {...(errors.fullName && { error: true, helperText: errors.fullName })}></TextField>\r\n                                        <TextField name=\"address\" variant=\"outlined\" label=\"Address\" value={values.address} onChange={handleInputChange} {...(errors.address && { error: true, helperText: errors.address })}></TextField>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                        <TextField name=\"email\" variant=\"outlined\" label=\"Email\" value={values.email} onChange={handleInputChange} {...(errors.email && { error: true, helperText: errors.email })}></TextField>\r\n                                        <TextField name=\"age\" variant=\"outlined\" label=\"Age\" value={values.age} onChange={handleInputChange}></TextField>\r\n                                        <TextField name=\"mobil\" variant=\"outlined\" label=\"Mobil\" value={values.mobil} onChange={handleInputChange}></TextField>\r\n                                        <div>\r\n                                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.smMargin}>Submit</Button>\r\n                                                <Button variant=\"contained\" className={classes.smMargin} onClick={resetForm}>Reset</Button>\r\n                                        </div>\r\n                                </Grid>\r\n                        </Grid>\r\n                </form>\r\n        );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n        customerList: state.customer.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n        createCustomer: actions.create,\r\n        updateCustomer: actions.update\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(CustomerForm));","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\react-app\\src\\components\\useForm.js",["113","114"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (initialFieldValues) => {\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange\r\n    }\r\n}\r\n\r\nexport default useForm;","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\index.js",[],["115","116"],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\App.js",["117"],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\reportWebVitals.js",[],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\components\\Customers.js",["118"],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\actions\\store.js",[],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\components\\CustomerForm.js",["119","120","121","122","123"],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\actions\\customer.js",[],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\reducers\\index.js",[],"C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\components\\useForm.js",["124","125"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (initialFieldValues, validate, setCurrentId) => {\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        const fieldValue = {\r\n            [name]: value\r\n        }\r\n        setValues({\r\n            ...values,\r\n            ...fieldValue\r\n        })\r\n        validate(fieldValue)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues({\r\n            ...initialFieldValues\r\n        })\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    }\r\n}\r\n\r\nexport default useForm;","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\actions\\api.js",["126"],"import axios from \"axios\";\r\n\r\nconst baseUrl = \"http://localhost:5000/api/\"\r\n\r\n\r\n\r\nexport default {\r\n\r\n    customer(url = baseUrl + 'api/') {\r\n        return {\r\n            fetchAll: () => axios.get(url),\r\n            fetchById: id => axios.get(url + id),\r\n            create: newRecord => axios.put(url, newRecord),\r\n            update: (id, updateRecord) => axios.post(url + id, updateRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n}\r\n\r\n","C:\\Users\\kubicjir\\source\\repos\\ASP.NET CORE\\ElinKS\\react-app\\src\\reducers\\customer.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":12},{"ruleId":"135","severity":1,"message":"136","line":30,"column":8,"nodeType":"137","endLine":30,"endColumn":10,"suggestions":"138"},{"ruleId":"127","replacedBy":"139"},{"ruleId":"129","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":7,"column":1,"nodeType":"143","endLine":18,"endColumn":2},{"ruleId":"131","severity":1,"message":"144","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":50,"column":33,"nodeType":"147","messageId":"148","endLine":50,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":51,"column":65,"nodeType":"147","messageId":"148","endLine":51,"endColumn":67},{"ruleId":"145","severity":1,"message":"146","line":71,"column":64,"nodeType":"147","messageId":"148","endLine":71,"endColumn":66},{"ruleId":"135","severity":1,"message":"149","line":86,"column":12,"nodeType":"137","endLine":86,"endColumn":29,"suggestions":"150"},{"ruleId":"131","severity":1,"message":"151","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"152","line":1,"column":27,"nodeType":"133","messageId":"134","endLine":1,"endColumn":36},{"ruleId":"127","replacedBy":"153"},{"ruleId":"129","replacedBy":"154"},{"ruleId":"131","severity":1,"message":"132","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":12},{"ruleId":"135","severity":1,"message":"136","line":30,"column":8,"nodeType":"137","endLine":30,"endColumn":10,"suggestions":"155"},{"ruleId":"131","severity":1,"message":"144","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":50,"column":33,"nodeType":"147","messageId":"148","endLine":50,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":51,"column":65,"nodeType":"147","messageId":"148","endLine":51,"endColumn":67},{"ruleId":"145","severity":1,"message":"146","line":71,"column":64,"nodeType":"147","messageId":"148","endLine":71,"endColumn":66},{"ruleId":"135","severity":1,"message":"149","line":86,"column":12,"nodeType":"137","endLine":86,"endColumn":29,"suggestions":"156"},{"ruleId":"131","severity":1,"message":"151","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"152","line":1,"column":27,"nodeType":"133","messageId":"134","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"142","line":7,"column":1,"nodeType":"143","endLine":18,"endColumn":2},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["159"],["157"],["158"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'props.customerList', 'setErrors', and 'setValues'. Either include them or remove the dependency array.",["160"],"'React' is defined but never used.","'useEffect' is defined but never used.",["157"],["158"],["161"],["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"163","fix":"167"},{"desc":"165","fix":"168"},"Update the dependencies array to be: [props]",{"range":"169","text":"170"},"Update the dependencies array to be: [props.currentId, props.customerList, setErrors, setValues]",{"range":"171","text":"172"},{"range":"173","text":"170"},{"range":"174","text":"172"},[950,952],"[props]",[2968,2985],"[props.currentId, props.customerList, setErrors, setValues]",[950,952],[2968,2985]]