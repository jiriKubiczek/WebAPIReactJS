{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kubicjir\\\\source\\\\repos\\\\ASP.NET CORE\\\\react-app\\\\src\\\\components\\\\CustomerForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, TextField, withStyles, Button } from \"@material-ui/core\";\nimport useForm from \"./useForm\";\n\nconst styles = theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      minWidth: 230\n    }\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n    minWidth: 80\n  }\n});\n\nconst initialFieldValues = {\n  id: '',\n  fullName: '',\n  address: '',\n  email: '',\n  age: '',\n  mobil: ''\n};\n\nconst CustomerForm = ({\n  classes,\n  ...props\n}) => {\n  _s();\n\n  const validate = () => {\n    let temp = {};\n    temp.id = values.id ? \"\" : \"This field is required.\";\n    temp.fullName = values.fullName ? \"\" : \"This field is required.\";\n    temp.address = values.address ? \"\" : \"This field is required.\";\n    temp.email = /^$|.+@.*..*/.test(values.email) ? \"\" : \"Email is not valid.\";\n    setErrors({ ...temp\n    });\n    Object.values(temp).every(x => x === \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange\n  } = useForm(initialFieldValues);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      window.alert(\"validation succeeded\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: classes.root,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"id\",\n          variant: \"outlined\",\n          label: \"Id\",\n          value: values.id,\n          onChange: handleInputChange,\n          ...(errors.id && {\n            error: true,\n            helperText: errors.id\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"fullName\",\n          variant: \"outlined\",\n          label: \"Full Name\",\n          value: values.fullName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"address\",\n          variant: \"outlined\",\n          label: \"Address\",\n          value: values.address,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"email\",\n          variant: \"outlined\",\n          label: \"Email\",\n          value: values.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"age\",\n          variant: \"outlined\",\n          label: \"Age\",\n          value: values.age,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"mobil\",\n          variant: \"outlined\",\n          label: \"Mobil\",\n          value: values.mobil,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            className: classes.smMargin,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: classes.smMargin,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 17\n  }, this);\n};\n\n_s(CustomerForm, \"mG5RTh43R9F7DhWdmKk9FSdnlAo=\", false, function () {\n  return [useForm];\n});\n\n_c = CustomerForm;\nexport default withStyles(styles)(CustomerForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerForm\");","map":{"version":3,"sources":["C:/Users/kubicjir/source/repos/ASP.NET CORE/react-app/src/components/CustomerForm.js"],"names":["React","useState","Grid","TextField","withStyles","Button","useForm","styles","theme","root","margin","spacing","minWidth","smMargin","initialFieldValues","id","fullName","address","email","age","mobil","CustomerForm","classes","props","validate","temp","values","test","setErrors","Object","every","x","setValues","errors","handleInputChange","handleSubmit","e","preventDefault","window","alert","error","helperText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Grid, TextField, withStyles, Button } from \"@material-ui/core\";\r\nimport useForm from \"./useForm\";\r\n\r\nconst styles = theme => ({\r\n        root: {\r\n                \"& .MuiTextField-root\": {\r\n                        margin: theme.spacing(1),\r\n                        minWidth: 230\r\n                }\r\n        },\r\n        smMargin: {\r\n                margin: theme.spacing(1),\r\n                minWidth: 80\r\n        }\r\n})\r\n\r\nconst initialFieldValues = {\r\n        id: '',\r\n        fullName: '',\r\n        address: '',\r\n        email: '',\r\n        age: '',\r\n        mobil: ''\r\n}\r\n\r\nconst CustomerForm = ({ classes, ...props }) => {\r\n\r\n        const validate = () => {\r\n                let temp = {}\r\n                temp.id = values.id ? \"\" : \"This field is required.\"\r\n                temp.fullName = values.fullName ? \"\" : \"This field is required.\"\r\n                temp.address = values.address ? \"\" : \"This field is required.\"\r\n                temp.email = (/^$|.+@.*..*/).test(values.email) ? \"\" : \"Email is not valid.\"\r\n                setErrors({\r\n                        ...temp\r\n                })\r\n\r\n                Object.values(temp).every(x => x === \"\")\r\n        }\r\n\r\n        const {\r\n                values,\r\n                setValues,\r\n                errors,\r\n                setErrors,\r\n                handleInputChange\r\n        } = useForm(initialFieldValues)\r\n\r\n        const handleSubmit = e => {\r\n                e.preventDefault()\r\n                if(validate()){\r\n                        window.alert(\"validation succeeded\")\r\n                }\r\n        }\r\n\r\n        return (\r\n                <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleSubmit}>\r\n                        <Grid container>\r\n                                <Grid item xs={6}>\r\n                                        <TextField name=\"id\" variant=\"outlined\" label=\"Id\" value={values.id} onChange={handleInputChange} {...(errors.id && { error: true, helperText: errors.id })}></TextField>\r\n                                        <TextField name=\"fullName\" variant=\"outlined\" label=\"Full Name\" value={values.fullName} onChange={handleInputChange}></TextField>\r\n                                        <TextField name=\"address\" variant=\"outlined\" label=\"Address\" value={values.address} onChange={handleInputChange}></TextField>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                        <TextField name=\"email\" variant=\"outlined\" label=\"Email\" value={values.email} onChange={handleInputChange}></TextField>\r\n                                        <TextField name=\"age\" variant=\"outlined\" label=\"Age\" value={values.age} onChange={handleInputChange}></TextField>\r\n                                        <TextField name=\"mobil\" variant=\"outlined\" label=\"Mobil\" value={values.mobil} onChange={handleInputChange}></TextField>\r\n                                        <div>\r\n                                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.smMargin}>Submit</Button>\r\n                                                <Button variant=\"contained\" className={classes.smMargin}>Reset</Button>\r\n                                        </div>\r\n                                </Grid>\r\n                        </Grid>\r\n                </form>\r\n        );\r\n}\r\n\r\nexport default withStyles(styles)(CustomerForm);"]},"metadata":{},"sourceType":"module"}