{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kubicjir\\\\source\\\\repos\\\\ASP.NET CORE\\\\react-app\\\\src\\\\components\\\\Customers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/customer\";\nimport { Grid, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from \"@material-ui/core\";\nimport CustomerForm from \"./CustomerForm\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst styles = theme => ({\n  root: {\n    \"& .MuiTableCell-head\": {\n      fontSize: \"1.25rem\"\n    }\n  },\n  paper: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(2)\n  }\n});\n\nconst Customers = ({\n  classes,\n  ...props\n}) => {\n  _s();\n\n  // const [x, setX] = useState(0)\n  // setX(5)\n  useEffect(() => {\n    props.fetchAllCustomers();\n  }, []); //componentDidMount\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(CustomerForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              className: classes.root,\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Full Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: props.customerList.map((record, index) => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"tableCell\", {\n                    children: record.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: record.fullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: record.address\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: record.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                      variant: \"text\",\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 57,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 57,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                          color: \"secondary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 58,\n                          columnNumber: 61\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 58,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 45\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Customers, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Customers;\n\nconst mapStateToProps = state => ({\n  customerList: state.customer.list\n});\n\nconst mapActionToProps = {\n  fetchAllCustomers: actions.fetchAll\n};\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Customers));\n\nvar _c;\n\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"sources":["C:/Users/kubicjir/source/repos/ASP.NET CORE/react-app/src/components/Customers.js"],"names":["React","useState","useEffect","connect","actions","Grid","Paper","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","withStyles","ButtonGroup","Button","CustomerForm","EditIcon","DeleteIcon","styles","theme","root","fontSize","paper","margin","spacing","padding","Customers","classes","props","fetchAllCustomers","customerList","map","record","index","id","fullName","address","email","mapStateToProps","state","customer","list","mapActionToProps","fetchAll"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/customer\";\r\nimport { Grid, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport CustomerForm from \"./CustomerForm\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        \"& .MuiTableCell-head\": {\r\n            fontSize: \"1.25rem\"\r\n        }\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(2),\r\n        padding: theme.spacing(2)\r\n    }\r\n})\r\n\r\nconst Customers = ({ classes, ...props }) => {\r\n    // const [x, setX] = useState(0)\r\n    // setX(5)\r\n\r\n    useEffect(() => {\r\n        props.fetchAllCustomers()\r\n    }, []) //componentDidMount\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={3}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <CustomerForm />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead className={classes.root}>\r\n                                <TableRow>\r\n                                    <TableCell>Id</TableCell>\r\n                                    <TableCell>Full Name</TableCell>\r\n                                    <TableCell>Address</TableCell>\r\n                                    <TableCell>Email</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    props.customerList.map((record, index) => {\r\n                                        return (<TableRow key={index} hover>\r\n                                            <tableCell>{record.id}</tableCell>\r\n                                            <TableCell>{record.fullName}</TableCell>\r\n                                            <TableCell>{record.address}</TableCell>\r\n                                            <TableCell>{record.email}</TableCell>\r\n                                            <TableCell>\r\n                                                <ButtonGroup variant=\"text\">\r\n                                                    <Button><EditIcon color=\"primary\" /></Button>\r\n                                                    <Button><DeleteIcon color=\"secondary\" /></Button>\r\n                                                </ButtonGroup>\r\n                                            </TableCell>\r\n                                        </TableRow>)\r\n                                    })\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    customerList: state.customer.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllCustomers: actions.fetchAll\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(Customers));"]},"metadata":{},"sourceType":"module"}